---
import { ViewTransitions } from 'astro:transitions';

import '@fontsource-variable/inter';
import '@fontsource-variable/fira-code';
import '@fontsource/pt-serif';

import '../globals.css';
---

<!doctype html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width, height=device-height, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no' />
    <title>DSA and AOC Playground</title>
    <meta name='description' content='Just another website to test DSA and solve some AOC problems' />
    <link rel='apple-touch-icon' sizes='180x180' href={`${import.meta.env.BASE_URL}/apple-touch-icon.png`} />
    <link rel='icon' type='image/png' sizes='32x32' href={`${import.meta.env.BASE_URL}/favicon-32x32.png`} />
    <link rel='icon' type='image/png' sizes='16x16' href={`${import.meta.env.BASE_URL}/favicon-16x16.png`} />
    <link rel='manifest' href={`${import.meta.env.BASE_URL}/site.webmanifest`} />
    <meta property='og:title' content='DSA and AOC Playground' />
    <meta property='og:type' content='website' />
    <meta property='og:url' content='https://venetc.github.io/aoc_and_random_tests/' />
    <meta property='og:image' content='https://venetc.github.io/aoc_and_random_tests/img.png' />
    <meta property='og:description' content='Just another website to test DSA and solve some AOC problems' />
    <meta property='og:site_name' content='DSA and AOC Playground' />
    <meta name='keywords' content='DSA, data structures, algorithms, AOC, algorithms on competitive platforms, playground' />

    <base href={import.meta.env.BASE_URL} />
    <ViewTransitions />
  </head>
  <body>
    <slot />
    <script>
      if (!window.__mockServiceWorker) {
        try {
          import('@/shared/mocks/browser').then(({ worker }) => {
            window.__mockServiceWorker = worker;

            worker.start({
              quiet: true,
              onUnhandledRequest: (req, print) => {
                if (!req.url.startsWith('/api')) return;

                print.warning();
              },
              serviceWorker: {
                url: `${import.meta.env.BASE_URL}mockServiceWorker.js`,
              },
            });
          });
        } catch (error) {}
      }
    </script>
  </body>
</html>
